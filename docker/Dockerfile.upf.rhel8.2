#/*
# * Licensed to the OpenAirInterface (OAI) Software Alliance under one or more
# * contributor license agreements.  See the NOTICE file distributed with
# * this work for additional information regarding copyright ownership.
# * The OpenAirInterface Software Alliance licenses this file to You under
# * the OAI Public License, Version 1.1  (the "License"); you may not use this file
# * except in compliance with the License.
# * You may obtain a copy of the License at
# *
# *      http://www.openairinterface.org/?page_id=698
# *
# * Unless required by applicable law or agreed to in writing, software
# * distributed under the License is distributed on an "AS IS" BASIS,
# * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# * See the License for the specific language governing permissions and
# * limitations under the License.
# *-------------------------------------------------------------------------------
# * For more information about the OpenAirInterface (OAI) Software Alliance:
# *      contact@openairinterface.org
# */
#---------------------------------------------------------------------
#
# Dockerfile for the Open-Air-Interface AMF service
#   Valid for RHEL 8.2
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# BUILDER IMAGE
#---------------------------------------------------------------------
FROM registry.access.redhat.com/ubi8/ubi:latest AS oai-upf-builder

ARG NEEDED_GIT_PROXY

COPY tmp/ca/redhat-uep.pem /etc/rhsm/ca
COPY tmp/entitlement/*.pem /etc/pki/entitlement

#ENV DEBIAN_FRONTEND=noninteractive
#ENV TZ=Europe
#RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

RUN rm -f /etc/rhsm-host && \
    yum repolist --disablerepo=* && \
    subscription-manager repos --enable codeready-builder-for-rhel-8-x86_64-rpms && \
    yum update -y && \
    yum install -y \
        psmisc \
        git \
        make \
        patch \
        sudo \
        python3 \
        yum-utils \
        wget &&\
	rm -rf /var/lib/apt/lists/*

RUN yum groupinstall -y 'Development Tools'

# Some GIT configuration command quite useful
RUN /bin/bash -c "if [[ -v NEEDED_GIT_PROXY ]]; then git config --global http.proxy $NEEDED_GIT_PROXY; fi"
RUN git config --global https.postBuffer 123289600
RUN git config --global http.sslverify false

RUN wget https://download-ib01.fedoraproject.org/pub/epel/8/Everything/x86_64/Packages/h/hyperscan-5.3.0-5.el8.x86_64.rpm
RUN rpm -i *.rpm

# Installing and configuring vpp
RUN git clone -b downstream https://github.com/travelping/vpp.git upf
# WORKDIR /upf
COPY docker/patches patches/
RUN patch -p1 -d    upf < patches/werror_disable.patch 
RUN git clone https://github.com/travelping/upg-vpp.git
RUN mv upg-vpp/upf/ upf/src/plugins/ 
RUN patch -p1 -d upf < patches/0008-Follow-symlinks-while-checking-timestamps-during-bui.patch 
RUN patch -p1 -d upf < patches/0008-vlib-decrement-counters.patch 
RUN patch -p1 -d upf < patches/0009-sparse-vector-fix-leak.patch

#RUN yum-config-manager --enable rhel-server-rhscl-8-rpms
#RUN rm *.deb -r upg-vpp/

#RUN make install-dep build -C upf/
#RUN make install-ext-dep build -C upf/


#---------------------------------------------------------------------
# TARGET IMAGE
#---------------------------------------------------------------------
#FROM FROM registry.access.redhat.com/ubi8/ubi:latest as oai-upf

# We install some debug tools for the moment in addition of mandatory libraries
#RUN yum update -y && \
#    yum install -y --enablerepo="ubi-8-codeready-builder" \
#    psmisc \
#    net-tools \
#    tshark \
#    openssl \
#    iproute2 \
#  && rm -rf /var/lib/apt/lists/*

#RUN wget http://repo.openfusion.net/centos7-x86_64/hyperscan-5.3.0-1.of.el7.x86_64.rpm
#RUN rpm -i hyperscan-5.3.0-1.of.el7.x86_64.rpm
#
#WORKDIR /openair-upf/bin/
#COPY --from=vpp-upf-builder /upf/build-root/install-vpp_debug-native/vpp/bin/vpp .
#COPY --from=vpp-upf-builder /upf/build-root/install-vpp_debug-native/vpp/bin/vppctl .
#COPY docker/configs .

#WORKDIR /openair-upf/scripts
#COPY docker/scripts .

#WORKDIR /usr/lib/x86_64-linux-gnu/
#COPY --from=vpp-upf-builder /upf/build-root/install-vpp_debug-native/vpp/lib/ .

#RUN ldconfig

#RUN groupadd vpp

#WORKDIR /openair-upf/bin

#ENTRYPOINT ["/openair-upf/bin/entrypoint.sh"]

