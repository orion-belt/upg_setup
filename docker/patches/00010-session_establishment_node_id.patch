--- a/src/plugins/upf/upf_pfcp_api.c  2020-12-18 15:41:33.250549473 +0000
+++ b/src/plugins/upf/upf_pfcp_api.c 2020-12-18 15:49:12.653515878 +0000
@@ -286,8 +286,11 @@
   SET_BIT (resp.grp.fields, ASSOCIATION_SETUP_RESPONSE_RECOVERY_TIME_STAMP);
   resp.recovery_time_stamp = psm->start_time;
 
-  SET_BIT (resp.grp.fields, ASSOCIATION_SETUP_RESPONSE_TP_BUILD_ID);
-  vec_add (resp.tp_build_id, vpe_version_string, strlen (vpe_version_string));
+  // SET_BIT (resp.grp.fields, ASSOCIATION_SETUP_RESPONSE_TP_BUILD_ID);
+  // vec_add (resp.tp_build_id, vpe_version_string, strlen (vpe_version_string));
+
+  SET_BIT (resp.grp.fields, ASSOCIATION_SETUP_RESPONSE_NODE_ID);
+  resp.response.node_id.ip = req->lcl.address;
 
   n = pfcp_get_association (&msg->request.node_id);
   if (n)

@@ -571,15 +574,52 @@

 #define OPT(MSG,FIELD,VALUE,DEFAULT)                                   \
   ((ISSET_BIT((MSG)->grp.fields, (FIELD))) ? MSG->VALUE : (DEFAULT))
+/**
+ * Translate "foo.com" into "0x3 f o o 0x3 c o m 0x0"
+ * A historical / hysterical micro-TLV scheme. DGMS.
+ */
+static u8 *
+upf_nwi_name_to_labels (u8 * name)
+{
+  int i;
+  int last_label_index;
+  u8 *rv;
+
+  rv = vec_dup (name);
+
+  /* punch in space for the first length */
+  vec_insert (rv, 1, 0);
+  last_label_index = 0;
+  i = 1;
+
+  while (i < vec_len (rv))
+    {
+      if (rv[i] == '.')
+       {
+         rv[last_label_index] = (i - last_label_index) - 1;
+         if ((i - last_label_index) > 63)
+           clib_warning ("stupid name, label length %d",
+                         i - last_label_index);
+         last_label_index = i;
+         rv[i] = 0;
+       }
+      i++;
+    }
+  /* Set the last real label length */
+  rv[last_label_index] = (i - last_label_index) - 1;
+
+  return rv;
+}

 static upf_nwi_t *
 lookup_nwi (u8 * name)
 {
   upf_main_t *gtm = &upf_main;
   uword *p;
-
+  
   assert (name);

+  name = upf_nwi_name_to_labels(name);
   if (pool_elts (gtm->nwis) == 0)
